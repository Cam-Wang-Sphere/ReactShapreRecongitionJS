// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ETriggerStateSchema } from '../etrigger-state-schema.js';
import { Vec2 } from '../wsschema/vec2.js';


export class TIMInputEvent {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TIMInputEvent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

areaHandle():number {
  return this.bb!.readInt32(this.bb_pos);
}

index():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

location(obj?:Vec2):Vec2|null {
  return (obj || new Vec2()).__init(this.bb_pos + 8, this.bb!);
}

eventType():ETriggerStateSchema {
  return this.bb!.readUint8(this.bb_pos + 16);
}

time():number {
  return this.bb!.readFloat32(this.bb_pos + 20);
}

static sizeOf():number {
  return 24;
}

static createTIMInputEvent(builder:flatbuffers.Builder, area_handle: number, index: number, location_x: number, location_y: number, event_type: ETriggerStateSchema, time: number):flatbuffers.Offset {
  builder.prep(4, 24);
  builder.writeFloat32(time);
  builder.pad(3);
  builder.writeInt8(event_type);
  builder.prep(4, 8);
  builder.writeFloat32(location_y);
  builder.writeFloat32(location_x);
  builder.writeInt32(index);
  builder.writeInt32(area_handle);
  return builder.offset();
}

}
