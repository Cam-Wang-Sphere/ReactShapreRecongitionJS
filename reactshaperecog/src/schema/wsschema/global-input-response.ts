// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { EWSGlobalInputTypes } from '../ewsglobal-input-types.js';


export class GlobalInputResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GlobalInputResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGlobalInputResponse(bb:flatbuffers.ByteBuffer, obj?:GlobalInputResponse):GlobalInputResponse {
  return (obj || new GlobalInputResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGlobalInputResponse(bb:flatbuffers.ByteBuffer, obj?:GlobalInputResponse):GlobalInputResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GlobalInputResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

currentInput():EWSGlobalInputTypes {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : EWSGlobalInputTypes.Min;
}

static startGlobalInputResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addCurrentInput(builder:flatbuffers.Builder, currentInput:EWSGlobalInputTypes) {
  builder.addFieldInt8(0, currentInput, EWSGlobalInputTypes.Min);
}

static endGlobalInputResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGlobalInputResponse(builder:flatbuffers.Builder, currentInput:EWSGlobalInputTypes):flatbuffers.Offset {
  GlobalInputResponse.startGlobalInputResponse(builder);
  GlobalInputResponse.addCurrentInput(builder, currentInput);
  return GlobalInputResponse.endGlobalInputResponse(builder);
}
}
