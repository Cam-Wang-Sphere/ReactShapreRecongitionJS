// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ButtonTypeEnum } from '../wsschema/button-type-enum.js';


export class ButtonRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ButtonRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsButtonRequest(bb:flatbuffers.ByteBuffer, obj?:ButtonRequest):ButtonRequest {
  return (obj || new ButtonRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsButtonRequest(bb:flatbuffers.ByteBuffer, obj?:ButtonRequest):ButtonRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ButtonRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sessionId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

buttonInput():ButtonTypeEnum {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ButtonTypeEnum.None;
}

static startButtonRequest(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSessionId(builder:flatbuffers.Builder, sessionId:number) {
  builder.addFieldInt32(0, sessionId, 0);
}

static addButtonInput(builder:flatbuffers.Builder, buttonInput:ButtonTypeEnum) {
  builder.addFieldInt8(1, buttonInput, ButtonTypeEnum.None);
}

static endButtonRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createButtonRequest(builder:flatbuffers.Builder, sessionId:number, buttonInput:ButtonTypeEnum):flatbuffers.Offset {
  ButtonRequest.startButtonRequest(builder);
  ButtonRequest.addSessionId(builder, sessionId);
  ButtonRequest.addButtonInput(builder, buttonInput);
  return ButtonRequest.endButtonRequest(builder);
}
}
