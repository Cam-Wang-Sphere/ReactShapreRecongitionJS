"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenericBatchRequest = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var generic_binary_wrapper_js_1 = require("../wsschema/generic-binary-wrapper.js");
var GenericBatchRequest = /** @class */ (function () {
    function GenericBatchRequest() {
        this.bb = null;
        this.bb_pos = 0;
    }
    GenericBatchRequest.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    GenericBatchRequest.getRootAsGenericBatchRequest = function (bb, obj) {
        return (obj || new GenericBatchRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    GenericBatchRequest.getSizePrefixedRootAsGenericBatchRequest = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new GenericBatchRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    GenericBatchRequest.prototype.sessionId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    GenericBatchRequest.prototype.messages = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? (obj || new generic_binary_wrapper_js_1.GenericBinaryWrapper()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    GenericBatchRequest.prototype.messagesLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    GenericBatchRequest.startGenericBatchRequest = function (builder) {
        builder.startObject(2);
    };
    GenericBatchRequest.addSessionId = function (builder, sessionId) {
        builder.addFieldInt32(0, sessionId, 0);
    };
    GenericBatchRequest.addMessages = function (builder, messagesOffset) {
        builder.addFieldOffset(1, messagesOffset, 0);
    };
    GenericBatchRequest.createMessagesVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    GenericBatchRequest.startMessagesVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    GenericBatchRequest.endGenericBatchRequest = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    GenericBatchRequest.createGenericBatchRequest = function (builder, sessionId, messagesOffset) {
        GenericBatchRequest.startGenericBatchRequest(builder);
        GenericBatchRequest.addSessionId(builder, sessionId);
        GenericBatchRequest.addMessages(builder, messagesOffset);
        return GenericBatchRequest.endGenericBatchRequest(builder);
    };
    return GenericBatchRequest;
}());
exports.GenericBatchRequest = GenericBatchRequest;
//# sourceMappingURL=generic-batch-request.js.map