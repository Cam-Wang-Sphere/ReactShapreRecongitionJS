"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.TIMInteractableDestroyed = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var TIMInteractableDestroyed = /** @class */ (function () {
    function TIMInteractableDestroyed() {
        this.bb = null;
        this.bb_pos = 0;
    }
    TIMInteractableDestroyed.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    TIMInteractableDestroyed.getRootAsTIMInteractableDestroyed = function (bb, obj) {
        return (obj || new TIMInteractableDestroyed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TIMInteractableDestroyed.getSizePrefixedRootAsTIMInteractableDestroyed = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new TIMInteractableDestroyed()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TIMInteractableDestroyed.prototype.sessionId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    TIMInteractableDestroyed.prototype.netHandle = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
    };
    TIMInteractableDestroyed.startTIMInteractableDestroyed = function (builder) {
        builder.startObject(2);
    };
    TIMInteractableDestroyed.addSessionId = function (builder, sessionId) {
        builder.addFieldInt32(0, sessionId, 0);
    };
    TIMInteractableDestroyed.addNetHandle = function (builder, netHandle) {
        builder.addFieldInt32(1, netHandle, 0);
    };
    TIMInteractableDestroyed.endTIMInteractableDestroyed = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    TIMInteractableDestroyed.createTIMInteractableDestroyed = function (builder, sessionId, netHandle) {
        TIMInteractableDestroyed.startTIMInteractableDestroyed(builder);
        TIMInteractableDestroyed.addSessionId(builder, sessionId);
        TIMInteractableDestroyed.addNetHandle(builder, netHandle);
        return TIMInteractableDestroyed.endTIMInteractableDestroyed(builder);
    };
    return TIMInteractableDestroyed;
}());
exports.TIMInteractableDestroyed = TIMInteractableDestroyed;
//# sourceMappingURL=timinteractable-destroyed.js.map