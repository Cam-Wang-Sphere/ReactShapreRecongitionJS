"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeWrapper = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var message_js_1 = require("../wsschema/message.js");
var TypeWrapper = /** @class */ (function () {
    function TypeWrapper() {
        this.bb = null;
        this.bb_pos = 0;
    }
    TypeWrapper.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    TypeWrapper.getRootAsTypeWrapper = function (bb, obj) {
        return (obj || new TypeWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TypeWrapper.getSizePrefixedRootAsTypeWrapper = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new TypeWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TypeWrapper.prototype.messageType = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : message_js_1.Message.NONE;
    };
    TypeWrapper.prototype.message = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
    };
    TypeWrapper.startTypeWrapper = function (builder) {
        builder.startObject(2);
    };
    TypeWrapper.addMessageType = function (builder, messageType) {
        builder.addFieldInt8(0, messageType, message_js_1.Message.NONE);
    };
    TypeWrapper.addMessage = function (builder, messageOffset) {
        builder.addFieldOffset(1, messageOffset, 0);
    };
    TypeWrapper.endTypeWrapper = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    TypeWrapper.finishTypeWrapperBuffer = function (builder, offset) {
        builder.finish(offset);
    };
    TypeWrapper.finishSizePrefixedTypeWrapperBuffer = function (builder, offset) {
        builder.finish(offset, undefined, true);
    };
    TypeWrapper.createTypeWrapper = function (builder, messageType, messageOffset) {
        TypeWrapper.startTypeWrapper(builder);
        TypeWrapper.addMessageType(builder, messageType);
        TypeWrapper.addMessage(builder, messageOffset);
        return TypeWrapper.endTypeWrapper(builder);
    };
    return TypeWrapper;
}());
exports.TypeWrapper = TypeWrapper;
//# sourceMappingURL=type-wrapper.js.map