"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientLoginRequest = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var ClientLoginRequest = /** @class */ (function () {
    function ClientLoginRequest() {
        this.bb = null;
        this.bb_pos = 0;
    }
    ClientLoginRequest.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    ClientLoginRequest.getRootAsClientLoginRequest = function (bb, obj) {
        return (obj || new ClientLoginRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ClientLoginRequest.getSizePrefixedRootAsClientLoginRequest = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ClientLoginRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ClientLoginRequest.prototype.playerId = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    ClientLoginRequest.prototype.secret = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    ClientLoginRequest.startClientLoginRequest = function (builder) {
        builder.startObject(2);
    };
    ClientLoginRequest.addPlayerId = function (builder, playerIdOffset) {
        builder.addFieldOffset(0, playerIdOffset, 0);
    };
    ClientLoginRequest.addSecret = function (builder, secretOffset) {
        builder.addFieldOffset(1, secretOffset, 0);
    };
    ClientLoginRequest.endClientLoginRequest = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    ClientLoginRequest.createClientLoginRequest = function (builder, playerIdOffset, secretOffset) {
        ClientLoginRequest.startClientLoginRequest(builder);
        ClientLoginRequest.addPlayerId(builder, playerIdOffset);
        ClientLoginRequest.addSecret(builder, secretOffset);
        return ClientLoginRequest.endClientLoginRequest(builder);
    };
    return ClientLoginRequest;
}());
exports.ClientLoginRequest = ClientLoginRequest;
//# sourceMappingURL=client-login-request.js.map