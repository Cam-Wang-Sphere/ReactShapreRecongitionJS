"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebClientLoginResponse = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var WebClientLoginResponse = /** @class */ (function () {
    function WebClientLoginResponse() {
        this.bb = null;
        this.bb_pos = 0;
    }
    WebClientLoginResponse.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    WebClientLoginResponse.getRootAsWebClientLoginResponse = function (bb, obj) {
        return (obj || new WebClientLoginResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    WebClientLoginResponse.getSizePrefixedRootAsWebClientLoginResponse = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new WebClientLoginResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    WebClientLoginResponse.prototype.repeaterSessionId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    WebClientLoginResponse.prototype.pendingId = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    WebClientLoginResponse.prototype.sessionId = function () {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    WebClientLoginResponse.startWebClientLoginResponse = function (builder) {
        builder.startObject(3);
    };
    WebClientLoginResponse.addRepeaterSessionId = function (builder, repeaterSessionId) {
        builder.addFieldInt32(0, repeaterSessionId, 0);
    };
    WebClientLoginResponse.addPendingId = function (builder, pendingId) {
        builder.addFieldInt32(1, pendingId, 0);
    };
    WebClientLoginResponse.addSessionId = function (builder, sessionId) {
        builder.addFieldInt32(2, sessionId, 0);
    };
    WebClientLoginResponse.endWebClientLoginResponse = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    WebClientLoginResponse.createWebClientLoginResponse = function (builder, repeaterSessionId, pendingId, sessionId) {
        WebClientLoginResponse.startWebClientLoginResponse(builder);
        WebClientLoginResponse.addRepeaterSessionId(builder, repeaterSessionId);
        WebClientLoginResponse.addPendingId(builder, pendingId);
        WebClientLoginResponse.addSessionId(builder, sessionId);
        return WebClientLoginResponse.endWebClientLoginResponse(builder);
    };
    return WebClientLoginResponse;
}());
exports.WebClientLoginResponse = WebClientLoginResponse;
//# sourceMappingURL=web-client-login-response.js.map