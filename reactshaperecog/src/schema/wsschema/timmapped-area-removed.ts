// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class TIMMappedAreaRemoved {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):TIMMappedAreaRemoved {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsTIMMappedAreaRemoved(bb:flatbuffers.ByteBuffer, obj?:TIMMappedAreaRemoved):TIMMappedAreaRemoved {
  return (obj || new TIMMappedAreaRemoved()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsTIMMappedAreaRemoved(bb:flatbuffers.ByteBuffer, obj?:TIMMappedAreaRemoved):TIMMappedAreaRemoved {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new TIMMappedAreaRemoved()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

toSession():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

handle():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startTIMMappedAreaRemoved(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addToSession(builder:flatbuffers.Builder, toSession:number) {
  builder.addFieldInt32(0, toSession, 0);
}

static addHandle(builder:flatbuffers.Builder, handle:number) {
  builder.addFieldInt32(1, handle, 0);
}

static endTIMMappedAreaRemoved(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createTIMMappedAreaRemoved(builder:flatbuffers.Builder, toSession:number, handle:number):flatbuffers.Offset {
  TIMMappedAreaRemoved.startTIMMappedAreaRemoved(builder);
  TIMMappedAreaRemoved.addToSession(builder, toSession);
  TIMMappedAreaRemoved.addHandle(builder, handle);
  return TIMMappedAreaRemoved.endTIMMappedAreaRemoved(builder);
}
}
