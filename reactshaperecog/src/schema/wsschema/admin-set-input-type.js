"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdminSetInputType = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var ewsglobal_input_types_js_1 = require("../ewsglobal-input-types.js");
var AdminSetInputType = /** @class */ (function () {
    function AdminSetInputType() {
        this.bb = null;
        this.bb_pos = 0;
    }
    AdminSetInputType.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    AdminSetInputType.getRootAsAdminSetInputType = function (bb, obj) {
        return (obj || new AdminSetInputType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    AdminSetInputType.getSizePrefixedRootAsAdminSetInputType = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new AdminSetInputType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    AdminSetInputType.prototype.sessionId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    AdminSetInputType.prototype.inputType = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : ewsglobal_input_types_js_1.EWSGlobalInputTypes.Min;
    };
    AdminSetInputType.startAdminSetInputType = function (builder) {
        builder.startObject(2);
    };
    AdminSetInputType.addSessionId = function (builder, sessionId) {
        builder.addFieldInt32(0, sessionId, 0);
    };
    AdminSetInputType.addInputType = function (builder, inputType) {
        builder.addFieldInt8(1, inputType, ewsglobal_input_types_js_1.EWSGlobalInputTypes.Min);
    };
    AdminSetInputType.endAdminSetInputType = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    AdminSetInputType.createAdminSetInputType = function (builder, sessionId, inputType) {
        AdminSetInputType.startAdminSetInputType(builder);
        AdminSetInputType.addSessionId(builder, sessionId);
        AdminSetInputType.addInputType(builder, inputType);
        return AdminSetInputType.endAdminSetInputType(builder);
    };
    return AdminSetInputType;
}());
exports.AdminSetInputType = AdminSetInputType;
//# sourceMappingURL=admin-set-input-type.js.map