"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.TIMMappedAreaAdd = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
var flatbuffers = require("flatbuffers");
var etiminteract_area_orientation_schema_js_1 = require("../etiminteract-area-orientation-schema.js");
var etiminteract_area_shape_type_schema_js_1 = require("../etiminteract-area-shape-type-schema.js");
var linear_color_js_1 = require("../wsschema/linear-color.js");
var vec2_js_1 = require("../wsschema/vec2.js");
var TIMMappedAreaAdd = /** @class */ (function () {
    function TIMMappedAreaAdd() {
        this.bb = null;
        this.bb_pos = 0;
    }
    TIMMappedAreaAdd.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    TIMMappedAreaAdd.getRootAsTIMMappedAreaAdd = function (bb, obj) {
        return (obj || new TIMMappedAreaAdd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TIMMappedAreaAdd.getSizePrefixedRootAsTIMMappedAreaAdd = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new TIMMappedAreaAdd()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    TIMMappedAreaAdd.prototype.sessionId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    TIMMappedAreaAdd.prototype.handle = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    TIMMappedAreaAdd.prototype.rotation = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? (obj || new vec2_js_1.Vec2()).__init(this.bb_pos + offset, this.bb) : null;
    };
    TIMMappedAreaAdd.prototype.color = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? (obj || new linear_color_js_1.LinearColor()).__init(this.bb_pos + offset, this.bb) : null;
    };
    TIMMappedAreaAdd.prototype.orientation = function () {
        var offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : etiminteract_area_orientation_schema_js_1.ETIMInteractAreaOrientationSchema.Horizontal;
    };
    TIMMappedAreaAdd.prototype.shape = function () {
        var offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : etiminteract_area_shape_type_schema_js_1.ETIMInteractAreaShapeTypeSchema.Rectangle;
    };
    TIMMappedAreaAdd.prototype.dimensions = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? (obj || new vec2_js_1.Vec2()).__init(this.bb_pos + offset, this.bb) : null;
    };
    TIMMappedAreaAdd.prototype.distance = function () {
        var offset = this.bb.__offset(this.bb_pos, 18);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    TIMMappedAreaAdd.startTIMMappedAreaAdd = function (builder) {
        builder.startObject(8);
    };
    TIMMappedAreaAdd.addSessionId = function (builder, sessionId) {
        builder.addFieldInt32(0, sessionId, 0);
    };
    TIMMappedAreaAdd.addHandle = function (builder, handle) {
        builder.addFieldInt32(1, handle, 0);
    };
    TIMMappedAreaAdd.addRotation = function (builder, rotationOffset) {
        builder.addFieldStruct(2, rotationOffset, 0);
    };
    TIMMappedAreaAdd.addColor = function (builder, colorOffset) {
        builder.addFieldStruct(3, colorOffset, 0);
    };
    TIMMappedAreaAdd.addOrientation = function (builder, orientation) {
        builder.addFieldInt8(4, orientation, etiminteract_area_orientation_schema_js_1.ETIMInteractAreaOrientationSchema.Horizontal);
    };
    TIMMappedAreaAdd.addShape = function (builder, shape) {
        builder.addFieldInt8(5, shape, etiminteract_area_shape_type_schema_js_1.ETIMInteractAreaShapeTypeSchema.Rectangle);
    };
    TIMMappedAreaAdd.addDimensions = function (builder, dimensionsOffset) {
        builder.addFieldStruct(6, dimensionsOffset, 0);
    };
    TIMMappedAreaAdd.addDistance = function (builder, distance) {
        builder.addFieldFloat32(7, distance, 0.0);
    };
    TIMMappedAreaAdd.endTIMMappedAreaAdd = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    return TIMMappedAreaAdd;
}());
exports.TIMMappedAreaAdd = TIMMappedAreaAdd;
//# sourceMappingURL=timmapped-area-add.js.map