// automatically generated by the FlatBuffers compiler, do not modify

import { ClientLoginResponse } from '../dot-dschema/client-login-response.js';
import { HealthPercentResponse } from '../dot-dschema/health-percent-response.js';
import { JsonToBinaryRequest } from '../dot-dschema/json-to-binary-request.js';
import { JsonToBinaryResponse } from '../dot-dschema/json-to-binary-response.js';
import { MediaPlaneLoginRequest } from '../dot-dschema/media-plane-login-request.js';
import { MediaPlaneToMobileLoginResponse } from '../dot-dschema/media-plane-to-mobile-login-response.js';
import { MobileToMediaPlaneLoginRequest } from '../dot-dschema/mobile-to-media-plane-login-request.js';
import { MobileToMediaPlaneLogoutRequest } from '../dot-dschema/mobile-to-media-plane-logout-request.js';
import { PingMediaPlaneRequest } from '../dot-dschema/ping-media-plane-request.js';
import { PingMediaPlaneResponse } from '../dot-dschema/ping-media-plane-response.js';
import { PingMediaPlaneUnreliableRequest } from '../dot-dschema/ping-media-plane-unreliable-request.js';
import { PingMediaPlaneUnreliableResponse } from '../dot-dschema/ping-media-plane-unreliable-response.js';
import { PingServerRequest } from '../dot-dschema/ping-server-request.js';
import { PingServerResponse } from '../dot-dschema/ping-server-response.js';
import { PingServerUnreliableRequest } from '../dot-dschema/ping-server-unreliable-request.js';
import { PingServerUnreliableResponse } from '../dot-dschema/ping-server-unreliable-response.js';
import { RepeaterBinaryResponse } from '../dot-dschema/repeater-binary-response.js';
import { RepeaterBroadcastBinaryResponse } from '../dot-dschema/repeater-broadcast-binary-response.js';
import { RepeaterLoginRequest } from '../dot-dschema/repeater-login-request.js';
import { ScoreUpdateResponse } from '../dot-dschema/score-update-response.js';
import { ShapeRequest } from '../dot-dschema/shape-request.js';
import { ShapeResponse } from '../dot-dschema/shape-response.js';
import { WebClientLoginRequest } from '../dot-dschema/web-client-login-request.js';
import { WebClientLoginResponse } from '../dot-dschema/web-client-login-response.js';


export enum Message {
  NONE = 0,
  PingServerRequest = 1,
  PingServerResponse = 2,
  PingServerUnreliableRequest = 3,
  PingServerUnreliableResponse = 4,
  PingMediaPlaneRequest = 5,
  PingMediaPlaneResponse = 6,
  PingMediaPlaneUnreliableRequest = 7,
  PingMediaPlaneUnreliableResponse = 8,
  ClientLoginResponse = 9,
  MediaPlaneLoginRequest = 10,
  MobileToMediaPlaneLoginRequest = 11,
  MobileToMediaPlaneLogoutRequest = 12,
  JsonToBinaryRequest = 13,
  JsonToBinaryResponse = 14,
  RepeaterLoginRequest = 15,
  WebClientLoginRequest = 16,
  WebClientLoginResponse = 17,
  RepeaterBinaryResponse = 18,
  RepeaterBroadcastBinaryResponse = 19,
  ShapeRequest = 20,
  ShapeResponse = 21,
  ScoreUpdateResponse = 22,
  HealthPercentResponse = 23,
  MediaPlaneToMobileLoginResponse = 24
}

export function unionToMessage(
  type: Message,
  accessor: (obj:ClientLoginResponse|HealthPercentResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MediaPlaneToMobileLoginResponse|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ScoreUpdateResponse|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse) => ClientLoginResponse|HealthPercentResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MediaPlaneToMobileLoginResponse|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ScoreUpdateResponse|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|null
): ClientLoginResponse|HealthPercentResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MediaPlaneToMobileLoginResponse|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ScoreUpdateResponse|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'PingServerRequest': return accessor(new PingServerRequest())! as PingServerRequest;
    case 'PingServerResponse': return accessor(new PingServerResponse())! as PingServerResponse;
    case 'PingServerUnreliableRequest': return accessor(new PingServerUnreliableRequest())! as PingServerUnreliableRequest;
    case 'PingServerUnreliableResponse': return accessor(new PingServerUnreliableResponse())! as PingServerUnreliableResponse;
    case 'PingMediaPlaneRequest': return accessor(new PingMediaPlaneRequest())! as PingMediaPlaneRequest;
    case 'PingMediaPlaneResponse': return accessor(new PingMediaPlaneResponse())! as PingMediaPlaneResponse;
    case 'PingMediaPlaneUnreliableRequest': return accessor(new PingMediaPlaneUnreliableRequest())! as PingMediaPlaneUnreliableRequest;
    case 'PingMediaPlaneUnreliableResponse': return accessor(new PingMediaPlaneUnreliableResponse())! as PingMediaPlaneUnreliableResponse;
    case 'ClientLoginResponse': return accessor(new ClientLoginResponse())! as ClientLoginResponse;
    case 'MediaPlaneLoginRequest': return accessor(new MediaPlaneLoginRequest())! as MediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLoginRequest': return accessor(new MobileToMediaPlaneLoginRequest())! as MobileToMediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLogoutRequest': return accessor(new MobileToMediaPlaneLogoutRequest())! as MobileToMediaPlaneLogoutRequest;
    case 'JsonToBinaryRequest': return accessor(new JsonToBinaryRequest())! as JsonToBinaryRequest;
    case 'JsonToBinaryResponse': return accessor(new JsonToBinaryResponse())! as JsonToBinaryResponse;
    case 'RepeaterLoginRequest': return accessor(new RepeaterLoginRequest())! as RepeaterLoginRequest;
    case 'WebClientLoginRequest': return accessor(new WebClientLoginRequest())! as WebClientLoginRequest;
    case 'WebClientLoginResponse': return accessor(new WebClientLoginResponse())! as WebClientLoginResponse;
    case 'RepeaterBinaryResponse': return accessor(new RepeaterBinaryResponse())! as RepeaterBinaryResponse;
    case 'RepeaterBroadcastBinaryResponse': return accessor(new RepeaterBroadcastBinaryResponse())! as RepeaterBroadcastBinaryResponse;
    case 'ShapeRequest': return accessor(new ShapeRequest())! as ShapeRequest;
    case 'ShapeResponse': return accessor(new ShapeResponse())! as ShapeResponse;
    case 'ScoreUpdateResponse': return accessor(new ScoreUpdateResponse())! as ScoreUpdateResponse;
    case 'HealthPercentResponse': return accessor(new HealthPercentResponse())! as HealthPercentResponse;
    case 'MediaPlaneToMobileLoginResponse': return accessor(new MediaPlaneToMobileLoginResponse())! as MediaPlaneToMobileLoginResponse;
    default: return null;
  }
}

export function unionListToMessage(
  type: Message, 
  accessor: (index: number, obj:ClientLoginResponse|HealthPercentResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MediaPlaneToMobileLoginResponse|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ScoreUpdateResponse|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse) => ClientLoginResponse|HealthPercentResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MediaPlaneToMobileLoginResponse|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ScoreUpdateResponse|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|null, 
  index: number
): ClientLoginResponse|HealthPercentResponse|JsonToBinaryRequest|JsonToBinaryResponse|MediaPlaneLoginRequest|MediaPlaneToMobileLoginResponse|MobileToMediaPlaneLoginRequest|MobileToMediaPlaneLogoutRequest|PingMediaPlaneRequest|PingMediaPlaneResponse|PingMediaPlaneUnreliableRequest|PingMediaPlaneUnreliableResponse|PingServerRequest|PingServerResponse|PingServerUnreliableRequest|PingServerUnreliableResponse|RepeaterBinaryResponse|RepeaterBroadcastBinaryResponse|RepeaterLoginRequest|ScoreUpdateResponse|ShapeRequest|ShapeResponse|WebClientLoginRequest|WebClientLoginResponse|null {
  switch(Message[type]) {
    case 'NONE': return null; 
    case 'PingServerRequest': return accessor(index, new PingServerRequest())! as PingServerRequest;
    case 'PingServerResponse': return accessor(index, new PingServerResponse())! as PingServerResponse;
    case 'PingServerUnreliableRequest': return accessor(index, new PingServerUnreliableRequest())! as PingServerUnreliableRequest;
    case 'PingServerUnreliableResponse': return accessor(index, new PingServerUnreliableResponse())! as PingServerUnreliableResponse;
    case 'PingMediaPlaneRequest': return accessor(index, new PingMediaPlaneRequest())! as PingMediaPlaneRequest;
    case 'PingMediaPlaneResponse': return accessor(index, new PingMediaPlaneResponse())! as PingMediaPlaneResponse;
    case 'PingMediaPlaneUnreliableRequest': return accessor(index, new PingMediaPlaneUnreliableRequest())! as PingMediaPlaneUnreliableRequest;
    case 'PingMediaPlaneUnreliableResponse': return accessor(index, new PingMediaPlaneUnreliableResponse())! as PingMediaPlaneUnreliableResponse;
    case 'ClientLoginResponse': return accessor(index, new ClientLoginResponse())! as ClientLoginResponse;
    case 'MediaPlaneLoginRequest': return accessor(index, new MediaPlaneLoginRequest())! as MediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLoginRequest': return accessor(index, new MobileToMediaPlaneLoginRequest())! as MobileToMediaPlaneLoginRequest;
    case 'MobileToMediaPlaneLogoutRequest': return accessor(index, new MobileToMediaPlaneLogoutRequest())! as MobileToMediaPlaneLogoutRequest;
    case 'JsonToBinaryRequest': return accessor(index, new JsonToBinaryRequest())! as JsonToBinaryRequest;
    case 'JsonToBinaryResponse': return accessor(index, new JsonToBinaryResponse())! as JsonToBinaryResponse;
    case 'RepeaterLoginRequest': return accessor(index, new RepeaterLoginRequest())! as RepeaterLoginRequest;
    case 'WebClientLoginRequest': return accessor(index, new WebClientLoginRequest())! as WebClientLoginRequest;
    case 'WebClientLoginResponse': return accessor(index, new WebClientLoginResponse())! as WebClientLoginResponse;
    case 'RepeaterBinaryResponse': return accessor(index, new RepeaterBinaryResponse())! as RepeaterBinaryResponse;
    case 'RepeaterBroadcastBinaryResponse': return accessor(index, new RepeaterBroadcastBinaryResponse())! as RepeaterBroadcastBinaryResponse;
    case 'ShapeRequest': return accessor(index, new ShapeRequest())! as ShapeRequest;
    case 'ShapeResponse': return accessor(index, new ShapeResponse())! as ShapeResponse;
    case 'ScoreUpdateResponse': return accessor(index, new ScoreUpdateResponse())! as ScoreUpdateResponse;
    case 'HealthPercentResponse': return accessor(index, new HealthPercentResponse())! as HealthPercentResponse;
    case 'MediaPlaneToMobileLoginResponse': return accessor(index, new MediaPlaneToMobileLoginResponse())! as MediaPlaneToMobileLoginResponse;
    default: return null;
  }
}
