// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class MediaPlaneToMobileLoginResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MediaPlaneToMobileLoginResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMediaPlaneToMobileLoginResponse(bb:flatbuffers.ByteBuffer, obj?:MediaPlaneToMobileLoginResponse):MediaPlaneToMobileLoginResponse {
  return (obj || new MediaPlaneToMobileLoginResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMediaPlaneToMobileLoginResponse(bb:flatbuffers.ByteBuffer, obj?:MediaPlaneToMobileLoginResponse):MediaPlaneToMobileLoginResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MediaPlaneToMobileLoginResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sessionId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

teamId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startMediaPlaneToMobileLoginResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSessionId(builder:flatbuffers.Builder, sessionId:number) {
  builder.addFieldInt32(0, sessionId, 0);
}

static addTeamId(builder:flatbuffers.Builder, teamId:number) {
  builder.addFieldInt32(1, teamId, 0);
}

static endMediaPlaneToMobileLoginResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createMediaPlaneToMobileLoginResponse(builder:flatbuffers.Builder, sessionId:number, teamId:number):flatbuffers.Offset {
  MediaPlaneToMobileLoginResponse.startMediaPlaneToMobileLoginResponse(builder);
  MediaPlaneToMobileLoginResponse.addSessionId(builder, sessionId);
  MediaPlaneToMobileLoginResponse.addTeamId(builder, teamId);
  return MediaPlaneToMobileLoginResponse.endMediaPlaneToMobileLoginResponse(builder);
}
}
