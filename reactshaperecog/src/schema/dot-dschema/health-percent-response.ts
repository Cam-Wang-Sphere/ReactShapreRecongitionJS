// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class HealthPercentResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):HealthPercentResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsHealthPercentResponse(bb:flatbuffers.ByteBuffer, obj?:HealthPercentResponse):HealthPercentResponse {
  return (obj || new HealthPercentResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsHealthPercentResponse(bb:flatbuffers.ByteBuffer, obj?:HealthPercentResponse):HealthPercentResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new HealthPercentResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

sessionId():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

healthPercent():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;
}

static startHealthPercentResponse(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSessionId(builder:flatbuffers.Builder, sessionId:number) {
  builder.addFieldInt32(0, sessionId, 0);
}

static addHealthPercent(builder:flatbuffers.Builder, healthPercent:number) {
  builder.addFieldFloat32(1, healthPercent, 0.0);
}

static endHealthPercentResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createHealthPercentResponse(builder:flatbuffers.Builder, sessionId:number, healthPercent:number):flatbuffers.Offset {
  HealthPercentResponse.startHealthPercentResponse(builder);
  HealthPercentResponse.addSessionId(builder, sessionId);
  HealthPercentResponse.addHealthPercent(builder, healthPercent);
  return HealthPercentResponse.endHealthPercentResponse(builder);
}
}
