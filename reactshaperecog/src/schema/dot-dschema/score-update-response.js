"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScoreUpdateResponse = void 0;
var flatbuffers = require("flatbuffers");
var ScoreUpdateResponse = /** @class */ (function () {
    function ScoreUpdateResponse() {
        this.bb = null;
        this.bb_pos = 0;
    }
    ScoreUpdateResponse.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    ScoreUpdateResponse.getRootAsScoreUpdateResponse = function (bb, obj) {
        return (obj || new ScoreUpdateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ScoreUpdateResponse.getSizePrefixedRootAsScoreUpdateResponse = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ScoreUpdateResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    ScoreUpdateResponse.prototype.sessionId = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
    };
    ScoreUpdateResponse.prototype.score = function () {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
    };
    ScoreUpdateResponse.startScoreUpdateResponse = function (builder) {
        builder.startObject(2);
    };
    ScoreUpdateResponse.addSessionId = function (builder, sessionId) {
        builder.addFieldInt32(0, sessionId, 0);
    };
    ScoreUpdateResponse.addScore = function (builder, score) {
        builder.addFieldFloat32(1, score, 0.0);
    };
    ScoreUpdateResponse.endScoreUpdateResponse = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    ScoreUpdateResponse.createScoreUpdateResponse = function (builder, sessionId, score) {
        ScoreUpdateResponse.startScoreUpdateResponse(builder);
        ScoreUpdateResponse.addSessionId(builder, sessionId);
        ScoreUpdateResponse.addScore(builder, score);
        return ScoreUpdateResponse.endScoreUpdateResponse(builder);
    };
    return ScoreUpdateResponse;
}());
exports.ScoreUpdateResponse = ScoreUpdateResponse;
//# sourceMappingURL=score-update-response.js.map